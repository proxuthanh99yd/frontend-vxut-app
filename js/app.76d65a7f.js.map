{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?99d2","webpack:///./src/App.vue","webpack:///./src/router/routes.js","webpack:///./src/store/modules/homepage.js","webpack:///./src/store/modules/dashboard.js","webpack:///./src/store/modules/test.js","webpack:///./src/store/modules/auth.js","webpack:///./src/store/modules/chapter.js","webpack:///./src/store/modules/question.js","webpack:///./src/store/modules/answer.js","webpack:///./src/store/modules/client-contest.js","webpack:///./src/store/modules/client-chapter.js","webpack:///./src/store/modules/client-question.js","webpack:///./src/store/modules/client-test.js","webpack:///./src/store/modules/client-result.js","webpack:///./src/store/modules/users.js","webpack:///./src/store/modules/test-skill.js","webpack:///./src/store/modules/question-skill.js","webpack:///./src/store/modules/answer-skill.js","webpack:///./src/store/modules/client-test-skill.js","webpack:///./src/store/modules/client-test-skill-question.js","webpack:///./src/store/modules/client-flashcard-manager.js","webpack:///./src/store/modules/client-flashcard-manager-detail.js","webpack:///./src/store/modules/my-flashcard.js","webpack:///./src/store/index.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","component","Vue","use","VueRouter","guest","to","from","next","localStorage","getItem","auth","admin","axios","response","role_id","catch","log","routes","path","beforeEnter","children","router","base","process","homepage","state","count","mutations","increment","dashboard","namespaced","testData","getters","test","setTestData","actions","getTestData","commit","storeTestRequest","post","updateTestRequest","put","id","destroyTestRequest","delete","getClientTestData","getClientChapterData","test_id","contest_id","storeClientTestRequest","getLevelData","userData","msg","user","setUserData","setMsg","getUserData","removeItem","updateUserData","updateProfileData","changePassUserData","sendLoginRequest","root","setItem","token","sendRegisterRequest","sendLogoutRequest","sendVerifyResendRequest","sendVerifyRequest","hash","dispatch","chapterData","chapter","setChapterData","getChapterData","storeChapterRequest","updateChapterRequest","destroyChapterRequest","questionData","question","setQuestionData","getQuestionData","storeQuestionRequest","config","updateQuestionRequest","destroyQuestionRequest","answerData","answer","setAnswerData","getAnswerData","storeAnswerRequest","updateAnswerRequest","patch","destroyAnswerRequest","contestData","contestClient","setContestData","getContestDataClient","chapterDataClient","chapterClient","setChapterDataClient","getChapterDataClient","questionDataClient","questionClient","setQuestionDataClient","storeQuestionRequestClient","testDataClient","testClient","setTestDataClient","getTestDataClient","resultDataClient","resultClient","setResultDataClient","getResultDataClient","getResultHistoryDataClient","getResultSkillHistoryDataClient","test_skill_id","result_skill_id","getResultTest","getResultTestDetail","user_id","getResultTestSkill","getResultTestSkillDetail","usersData","users","setUsersData","getUsersData","storeUsersData","testSKillData","testSkill","setTestSkillData","getTestSkillData","storeTestSkillRequest","updateTestSkillRequest","destroyTestSkillRequest","questionSkillData","questionSkill","setQuestionSKillData","getQuestionSkillData","storeQuestionSkillRequest","updateQuestionSkillRequest","destroyQuestionSkillRequest","answerSkillData","answerSkill","setAnswerSkillData","getAnswerSkillData","storeAnswerSkillRequest","updateAnswerSkillRequest","destroyAnswerSkillRequest","testSkillDataClient","testSkillClient","setTestSkillDataClient","getTestSkillDataClient","level_id","skill_id","getTestSkillHistoryDataClient","getTestHistoryDataClient","questionSkillDataClient","questionSkillClient","setQuestionSkillDataClient","storeQuestionSkillRequestClient","getQuestionSkillDataClient","flashcardManagerDataClient","flashcardManagerClient","setFlashcardManagerDataClient","getFlashcardManagerDataClient","storeFlashcardManagerDataClientRequest","updateFlashcardManagerDataClientRequest","destroyFlashcardManagerDataClientRequest","flashcardManagerDetailDataClient","flashcardManagerDetailClient","setFlashcardManagerDetailDataClient","getFlashcardManagerDetailDataClient","storeFlashcardManagerDetailDataClientRequest","updateFlashcardManagerDetailDataClientRequest","destroyFlashcardManagerDetailDataClientRequest","myFlashcardData","myFlashcard","setMyFlashcardDataData","getFlashcardsData","getFlashcardData","getAllFlashcardsData","getAdminAllFlashcardsData","Vuex","store","Store","clientContest","clientAnswer","clientChapter","clientQuestion","clientTest","clientResult","clientTestSkill","clientTestSkillQuestion","clientFlashcardManager","clientFlashcardManagerDetail","CKEditor","VueCountdownTimer","BootstrapVueIcons","interceptors","status","errors","headers","common","Authorization","Accept","ElementUI","locale","vSelect","VueFormulate","BootstrapVue","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.76d65a7f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"home\":\"home\",\"login\":\"login\",\"register\":\"register\"}[chunkId]||chunkId) + \".\" + {\"home\":\"2f1b2539\",\"login\":\"5072a066\",\"register\":\"f28a50c4\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"home\":1,\"login\":1,\"register\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"home\":\"home\",\"login\":\"login\",\"register\":\"register\"}[chunkId]||chunkId) + \".\" + {\"home\":\"1f5828bb\",\"login\":\"1c036b6f\",\"register\":\"fc42bdee\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/frontend-vxut-app/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=375d413f&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\r\nimport VueRouter from \"vue-router\";\r\nimport axios from \"axios\";\r\n\r\nVue.use(VueRouter);\r\n\r\nconst guest = (to, from, next) => {\r\n    if (!localStorage.getItem(\"authToken\")) {\r\n        return next();\r\n    } else {\r\n        return next(\"/\");\r\n    }\r\n};\r\nconst auth = (to, from, next) => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n        return next();\r\n    } else {\r\n        return next(\"/login\");\r\n    }\r\n};\r\nconst admin = (to, from, next) => {\r\n    axios.get('http://vxut-app.test/api/user')\r\n        .then(function (response) {\r\n            if (response.data.role_id < 3) {\r\n                return next();\r\n            } else {\r\n                return next(\"/\");\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nconst routes = [\r\n    {\r\n        path: \"/\",\r\n        name: \"Home\",\r\n        beforeEnter: auth,\r\n        component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Main.vue\"),\r\n        children: [\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin',\r\n                name: 'Dashboard',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/MainDashboard.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/test',\r\n                name: 'Test',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/TestManager.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/chapter/:test_id',\r\n                name: 'Chapter',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/ChapterManager.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/question/:chapter_id',\r\n                name: 'Question',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/QuestionManager.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/answer/:question_id',\r\n                name: 'Answer',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/AnswerManager.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/users',\r\n                name: 'Users',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/UserManager.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/flash-card',\r\n                name: 'FlashcardMg',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/FlashcardManager.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/test-skill',\r\n                name: 'TestSkill',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/TestSkillManager.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/question-skill/:test_skill_id',\r\n                name: 'QuestionSkill',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/QuestionSkillManager.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/answer-skill/:question_skill_id',\r\n                name: 'AnswerSkill',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/AnswerSkillManager.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/result',\r\n                name: 'ResultManager',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/ResultManager.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/result-test/:test_id',\r\n                name: 'ResultTestManager',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/ResultTestManager.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/result-test-detail/:test_id/:user_id',\r\n                name: 'ResultTestDetailManager',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/ResultTestDetail.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/result-test-skill/:test_skill_id',\r\n                name: 'ResultTestSkillManager',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/ResultTestSkillManager.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/admin/result-test-skill/:test_skill_id/:user_id/:result_skill_id',\r\n                name: 'ResultTestSkillDetailManager',\r\n                beforeEnter: admin,\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Admin/ResultTestSkillDetail.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '',\r\n                name: 'HomePage',\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Client/HomePage.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/tests',\r\n                name: 'Tests',\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Client/Tests.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/test/:test_id',\r\n                name: 'ClientTest',\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Client/Test.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/test-skills/',\r\n                name: 'TestSkillLevel',\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Client/TestSkillLevel.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/test-skills/:level_id/:skill_id',\r\n                name: 'ClientTestSkill',\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Client/TestSkill.vue\"),\r\n            },\r\n            {\r\n                // UserProfile will be rendered inside User's <router-view>\r\n                // when /user/:id/profile is matched\r\n                path: '/test-skill-question/:test_skill_id',\r\n                name: 'ClientTestSkillQuestion',\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Client/TestSkillQuestion.vue\"),\r\n            },\r\n\r\n            {\r\n                path: '/flashcard-manager/:flashcards_manager_id',\r\n                name: 'ClientFlashcardManager',\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Client/FlashCardManager.vue\"),\r\n            },\r\n            {\r\n                path: '/my-flashcards',\r\n                name: 'MyFlashcards',\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Client/MyFlashcards.vue\"),\r\n            },\r\n            {\r\n                path: '/my-flashcard/:my_flashcard_id',\r\n                name: 'MyFlashcard',\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Client/MyFlashcard.vue\"),\r\n            },\r\n            {\r\n                path: '/flashcards',\r\n                name: 'Flashcard',\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Client/FlashCards.vue\"),\r\n            },\r\n            {\r\n                path: '/profile',\r\n                name: 'Profile',\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Client/Profile.vue\"),\r\n            },\r\n            {\r\n                path: '/result-history/:test_id',\r\n                name: 'ResultHistory',\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Client/ResultHistory.vue\"),\r\n            },\r\n            {\r\n                path: '/result-skill-history/:test_skill_id/:result_skill_id',\r\n                name: 'ResultSkillHistory',\r\n                component: () => import(/* webpackChunkName: \"home\" */ \"../pages/Client/ResultSkillHistory.vue\"),\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        name: \"Login\",\r\n        beforeEnter: guest,\r\n        component: () =>\r\n            import(/* webpackChunkName: \"login\" */ \"../pages/Login.vue\")\r\n    },\r\n    {\r\n        path: \"/register\",\r\n        name: \"Register\",\r\n        beforeEnter: guest,\r\n        component: () =>\r\n            import(/* webpackChunkName: \"register\" */ \"../pages/Register.vue\")\r\n    },\r\n];\r\n\r\nconst router = new VueRouter({\r\n    mode: \"history\",\r\n    base: process.env.BASE_URL,\r\n    routes\r\n});\r\n\r\nexport default router;\r\n","const homepage = ({\r\n    state: {\r\n      count: 0,\r\n      homepage:true\r\n    },\r\n    mutations: {\r\n      increment (state) {\r\n        state.count++\r\n      }\r\n    }\r\n  })\r\n\r\n  export default homepage;","const dashboard = ({\r\n    state: {\r\n      count: 0,\r\n      dashboard:true\r\n    },\r\n    mutations: {\r\n      increment (state) {\r\n        state.count++\r\n      }\r\n    }\r\n  })\r\n\r\nexport default dashboard;","import axios from \"axios\";\r\n\r\nexport default {\r\n  namespaced: true,\r\n\r\n  state: {\r\n    testData: null,\r\n  },\r\n\r\n  getters: {\r\n    test: state => state.testData\r\n  },\r\n\r\n  mutations: {\r\n    setTestData(state, data) {\r\n      state.testData = data;\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    getTestData({ commit }) {\r\n      axios\r\n        .get(\"http://vxut-app.test/api/admin/test\")\r\n        .then(response => {\r\n          commit(\"setTestData\", response.data);\r\n        })\r\n        .catch(err => {\r\n          commit(err);\r\n        });\r\n    },\r\n    storeTestRequest({ commit }, data) {\r\n      return axios\r\n        .post(\"http://vxut-app.test/api/admin/test\", data)\r\n        .then(response => {\r\n          // commit(\"setTestData\", response.data);\r\n        });\r\n    },\r\n    updateTestRequest({ commit }, data) {\r\n      return axios\r\n        .put(\"http://vxut-app.test/api/admin/test/\" + data.id, data)\r\n        .then(response => {\r\n          // commit(\"setTestData\", response.data);\r\n        });\r\n    },\r\n    destroyTestRequest({ commit }, data) {\r\n      return axios\r\n        .delete(\"http://vxut-app.test/api/admin/test/\" + data)\r\n        .then(response => {\r\n        });\r\n    },\r\n    getClientTestData({ commit }) {\r\n      axios\r\n        .get(\"http://vxut-app.test/api/tests\")\r\n        .then(response => {\r\n          commit(\"setTestData\", response.data);\r\n        })\r\n        .catch(err => {\r\n          commit(err);\r\n        });\r\n    },\r\n    getClientChapterData({ commit }, data) {\r\n      axios\r\n        .get(\"http://vxut-app.test/api/test/\" + data.test_id + \"/\" + data.contest_id)\r\n        .then(response => {\r\n          commit(\"setTestData\", response.data);\r\n        })\r\n        .catch(err => {\r\n          commit(err);\r\n        });\r\n    },\r\n    storeClientTestRequest({ commit }, data) {\r\n      return axios\r\n        .post(\"http://vxut-app.test/api/tests\", data)\r\n        .then(response => {\r\n          // commit(\"setTestData\", response.data);\r\n        });\r\n    },\r\n    getLevelData({ commit }, data) {\r\n      axios\r\n        .get(\"http://vxut-app.test/api/test-level/\" + data)\r\n        .then(response => {\r\n          commit(\"setTestData\", response.data);\r\n        })\r\n        .catch(err => {\r\n          commit(err);\r\n        });\r\n    },\r\n  }\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  namespaced: true,\r\n\r\n  state: {\r\n    userData: null,\r\n    msg: null,\r\n  },\r\n\r\n  getters: {\r\n    user: state => state.userData,\r\n    msg: state => state.msg\r\n  },\r\n\r\n  mutations: {\r\n    setUserData(state, user) {\r\n      state.userData = user;\r\n    },\r\n    setMsg(state, msg) {\r\n      state.msg = msg;\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    getUserData({ commit }) {\r\n      axios\r\n        .get(process.env.VUE_APP_API_BASE_URL + \"user\")\r\n        .then(response => {\r\n          commit(\"setUserData\", response.data);\r\n        })\r\n        .catch(() => {\r\n          localStorage.removeItem(\"authToken\");\r\n        });\r\n    },\r\n    updateUserData({ commit }, data) {\r\n      axios\r\n        .post(process.env.VUE_APP_API_BASE_URL + \"edit-user\", data)\r\n        .then(response => {\r\n          commit(\"setUserData\", response.data);\r\n        })\r\n        .catch(() => {\r\n          localStorage.removeItem(\"authToken\");\r\n        });\r\n    },\r\n    updateProfileData({ commit }, data) {\r\n      axios\r\n        .post(process.env.VUE_APP_API_BASE_URL + \"edit-profile\", data)\r\n        .then(response => {\r\n          commit(\"setUserData\", response.data);\r\n        })\r\n        .catch(() => {\r\n          localStorage.removeItem(\"authToken\");\r\n        });\r\n    },\r\n    changePassUserData({ commit }, data) {\r\n      axios\r\n        .post(process.env.VUE_APP_API_BASE_URL + \"change-password\", data)\r\n        .then(response => {\r\n          commit(\"setMsg\", response.data);\r\n        })\r\n        .catch(() => {\r\n          localStorage.removeItem(\"authToken\");\r\n        });\r\n    },\r\n    sendLoginRequest({ commit }, data) {\r\n      commit(\"setErrors\", {}, { root: true });\r\n      return axios\r\n        .post(process.env.VUE_APP_API_BASE_URL + \"login\", data)\r\n        .then(response => {\r\n          commit(\"setUserData\", response.data.user);\r\n          localStorage.setItem(\"authToken\", response.data.token);\r\n        });\r\n    },\r\n    sendRegisterRequest({ commit }, data) {\r\n      commit(\"setErrors\", {}, { root: true });\r\n      return axios\r\n        .post(process.env.VUE_APP_API_BASE_URL + \"register\", data)\r\n        .then(response => {\r\n          if (response) {\r\n            commit(\"setUserData\", response.data.user);\r\n            localStorage.setItem(\"authToken\", response.data.token);\r\n          } else {\r\n            commit(\"setUserData\", response.data.user);\r\n          }\r\n\r\n          localStorage.setItem(\"authToken\", response.data.token);\r\n        });\r\n    },\r\n    sendLogoutRequest({ commit }) {\r\n      axios.post(process.env.VUE_APP_API_BASE_URL + \"logout\").then(() => {\r\n        commit(\"setUserData\", null);\r\n        localStorage.removeItem(\"authToken\");\r\n      });\r\n    },\r\n    sendVerifyResendRequest() {\r\n      return axios.get(process.env.VUE_APP_API_BASE_URL + \"email/resend\");\r\n    },\r\n    sendVerifyRequest({ dispatch }, hash) {\r\n      return axios\r\n        .get(process.env.VUE_APP_API_BASE_URL + \"email/verify/\" + hash)\r\n        .then(() => {\r\n          dispatch(\"getUserData\");\r\n        });\r\n    }\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        chapterData: null\r\n    },\r\n\r\n    getters: {\r\n        chapter: state => state.chapterData\r\n    },\r\n\r\n    mutations: {\r\n        setChapterData(state, data) {\r\n            state.chapterData = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getChapterData({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/admin/chapter/\" + data)\r\n                .then(response => {\r\n                    commit(\"setChapterData\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        storeChapterRequest({ commit }, data) {\r\n            return axios\r\n                .post(\"http://vxut-app.test/api/admin/chapter/\" + data.id, data)\r\n                .then(response => {\r\n                    // commit(\"setChapterData\", response.data);\r\n                });\r\n        },\r\n        updateChapterRequest({ commit }, data) {\r\n            return axios\r\n                .put(\"http://vxut-app.test/api/admin/chapter/\" + data.id, data)\r\n                .then(response => {\r\n                    // commit(\"setChapterData\", response.data);\r\n                });\r\n        },\r\n        destroyChapterRequest({ commit }, data) {\r\n            return axios\r\n                .delete(\"http://vxut-app.test/api/admin/chapter/\" + data)\r\n                .then(response => {\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        questionData: null\r\n    },\r\n\r\n    getters: {\r\n        question: state => state.questionData\r\n    },\r\n\r\n    mutations: {\r\n        setQuestionData(state, data) {\r\n            state.questionData = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getQuestionData({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/admin/question/\" + data)\r\n                .then(response => {\r\n                    commit(\"setQuestionData\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        storeQuestionRequest({ commit }, data, config) {\r\n            return axios\r\n                .post(\"http://vxut-app.test/api/admin/question\", data, config)\r\n                .then(response => {\r\n                    // commit(\"setQuestionData\", response.data);\r\n                });\r\n        },\r\n        updateQuestionRequest({ commit }, data, config) {\r\n            return axios\r\n                .post(`http://vxut-app.test/api/admin/question/${data.get(\"id\")}/edit`, data, config)\r\n                .then(response => {\r\n                    // commit(\"setQuestionData\", response.data);\r\n                });\r\n        },\r\n        destroyQuestionRequest({ commit }, data) {\r\n            return axios\r\n                .delete(\"http://vxut-app.test/api/admin/question/\" + data)\r\n                .then(response => {\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\n// import testApi from \"../../service/test\"\r\n\r\n// const types = {\r\n//   CREATE_TEST_TYPE: \"CREATE_TEST_TYPE\",\r\n//   CREATE_TEST_TYPE_SUCCESS: \"CREATE_TEST_TYPE_SUCCESS\",\r\n//   CREATE_TEST_TYPE_FAIL: \"CREATE_TEST_TYPE_FAIL\",\r\n\r\n//   EDIT_TEST_TYPE: \"EDIT_TEST_TYPE\",\r\n//   EDIT_TEST_TYPE_SUCCESS: \"EDIT_TEST_TYPE_SUCCESS\",\r\n//   EDIT_TEST_TYPE_FAIL: \"EDIT_TEST_TYPE_FAIL\",\r\n\r\n//   GET_TEST_TYPE: \"GET_TEST_TYPE\",\r\n//   GET_TEST_TYPE_SUCCESS: \"GET_TEST_TYPE_SUCCESS\",\r\n//   GET_TEST_TYPE_FAIL: \"GET_TEST_TYPE_FAIL\",\r\n\r\n//   DELETE_TEST_TYPE: \"DELETE_TEST_TYPE\",\r\n//   DELETE_TEST_TYPE_SUCCESS: \"DELETE_TEST_TYPE_SUCCESS\",\r\n//   DELETE_TEST_TYPE_FAIL: \"DELETE_TEST_TYPE_FAIL\"\r\n// }\r\n\r\n// const test = ({\r\n//   namespaced: true,\r\n//   state: {\r\n//     count: 0,\r\n//     test: [],\r\n//     byTest: [],\r\n//     alertModel: {\r\n//       status: false,\r\n//       text: \"\"\r\n//     }\r\n//   },\r\n//   actions: {\r\n//     create_test_type_list({ commit }, payload) {\r\n//       commit(types.CREATE_TEST_TYPE);\r\n//       testApi.StoreTest(payload)\r\n//         .then(rs => {\r\n//           commit(types.CREATE_TEST_TYPE_SUCCESS, rs.data);\r\n//         })\r\n//         .catch(err => {\r\n//           commit(types.CREAT_TEST_TYPE_FAIL, err);\r\n//         })\r\n//     },\r\n//     get_test_type_list({ commit }, payload) {\r\n//       commit(types.GET_TEST_TYPE);\r\n//       testApi.IndexTest()\r\n//         .then(rs => {\r\n//           commit(types.GET_TEST_TYPE_SUCCESS, rs.data);\r\n//         })\r\n//         .catch(err => {\r\n//           commit(types.GET_TEST_TYPE_FAIL, err);\r\n//         })\r\n//     },\r\n//     edit_test_type_list({ commit }, payload) {\r\n//       commit(types.EDIT_TEST_TYPE);\r\n//       testApi.EditTest(payload)\r\n//         .then(rs => {\r\n//           commit(types.EDIT_TEST_TYPE_SUCCESS, rs.data);\r\n//         })\r\n//         .catch(err => {\r\n//           commit(types.EDIT_TEST_TYPE_FAIL, err);\r\n//         })\r\n//     },\r\n//     delete_test_type_list({ commit }, payload) {\r\n//       commit(types.DELETE_TEST_TYPE);\r\n//       testApi.DestroyTest(payload)\r\n//         .then(rs => {\r\n//           commit(types.DELETE_TEST_TYPE_SUCCESS);\r\n//         })\r\n//         .catch(err => {\r\n//           commit(types.DELETE_TEST_TYPE_FAIL, err);\r\n//         })\r\n//     }\r\n//   },\r\n//   mutations: {\r\n//     [types.CREATE_TEST_TYPE](state, payload) {\r\n//     },\r\n//     [types.CREATE_TEST_TYPE_SUCCESS](state, payload) {\r\n//       state.test = payload;\r\n//       state.alertModel = {\r\n//         status: true,\r\n//         text: \"CREAT_TEST_TYPE_SUCCESS\"\r\n//       }\r\n//     },\r\n//     [types.CREATE_TEST_TYPE_FAIL](state, err) {\r\n//       state.alertModel = {\r\n//         status: true,\r\n//         text: \"CREAT_TEST_TYPE_FAIL\"\r\n//       }\r\n//     },\r\n\r\n//     [types.GET_TEST_TYPE](state, payload) {\r\n//     },\r\n//     [types.GET_TEST_TYPE_SUCCESS](state, payload) {\r\n//       state.test = payload;\r\n//       state.alertModel = {\r\n//         status: true,\r\n//         text: \"GET_TEST_TYPE_SUCCESS\"\r\n//       }\r\n//     },\r\n//     [types.GET_TEST_TYPE_FAIL](state, err) {\r\n//       state.alertModel = {\r\n//         status: true,\r\n//         text: \"GET_TEST_TYPE_FAIL\"\r\n//       }\r\n//     },\r\n\r\n//     [types.EDIT_TEST_TYPE](state, payload) {\r\n//     },\r\n//     [types.EDIT_TEST_TYPE_SUCCESS](state, payload) {\r\n//       state.byTest = payload;\r\n//       state.alertModel = {\r\n//         status: true,\r\n//         text: \"EDIT_TEST_TYPE_SUCCESS\"\r\n//       }\r\n//     },\r\n//     [types.EDIT_TEST_TYPE_FAIL](state, err) {\r\n//       state.alertModel = {\r\n//         status: true,\r\n//         text: \"EDIT_TEST_TYPE_FAIL\"\r\n//       }\r\n//     },\r\n\r\n\r\n//     [types.DELETE_TEST_TYPE](state, payload) {\r\n//     },\r\n//     [types.DELETE_TEST_TYPE_SUCCESS](state, payload) {\r\n//       state.alertModel = {\r\n//         status: true,\r\n//         text: \"DELETE_TEST_TYPE_SUCCESS\"\r\n//       }\r\n//     },\r\n//     [types.DELETE_TEST_TYPE_FAIL](state, err) {\r\n//       state.alertModel = {\r\n//         status: true,\r\n//         text: \"DELETE_TEST_TYPE_FAIL\"\r\n//       }\r\n//     },\r\n//   },\r\n//   getters: {\r\n//     test_type_list: state => state.test,\r\n//     state_edit_test_type_list: state => state.byTest,\r\n//   }\r\n// });\r\n\r\n// export default test;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        answerData: null\r\n    },\r\n\r\n    getters: {\r\n        answer: state => state.answerData\r\n    },\r\n\r\n    mutations: {\r\n        setAnswerData(state, data) {\r\n            state.answerData = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getAnswerData({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/admin/answer/\" + data)\r\n                .then(response => {\r\n                    commit(\"setAnswerData\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        storeAnswerRequest({ commit }, data) {\r\n            return axios\r\n                .post(\"http://vxut-app.test/api/admin/answer\", data)\r\n                .then(response => {\r\n                    // commit(\"setAnswerData\", response.data);\r\n                });\r\n        },\r\n        updateAnswerRequest({ commit }, data) {\r\n            return axios\r\n                .patch(`http://vxut-app.test/api/admin/answer/${data.id}`, data)\r\n                .then(response => {\r\n                    // commit(\"setAnswerData\", response.data);\r\n                });\r\n        },\r\n        destroyAnswerRequest({ commit }, data) {\r\n            return axios\r\n                .delete(\"http://vxut-app.test/api/admin/answer/\" + data)\r\n                .then(response => {\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        contestData: null\r\n    },\r\n\r\n    getters: {\r\n        contestClient: state => state.contestData\r\n    },\r\n\r\n    mutations: {\r\n        setContestData(state, data) {\r\n            state.contestData = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getContestDataClient({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/tests/\" + data)\r\n                .then(response => {\r\n                    commit(\"setContestData\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        chapterDataClient: null,\r\n    },\r\n\r\n    getters: {\r\n        chapterClient: state => state.chapterDataClient\r\n    },\r\n\r\n    mutations: {\r\n        setChapterDataClient(state, data) {\r\n            state.chapterDataClient = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getChapterDataClient({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/test/\" + data.test_id + \"/\" + data.contest_id)\r\n                .then(response => {\r\n                    commit(\"setChapterDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        storeClientTestRequest({ commit }, data) {\r\n            return axios\r\n                .post(\"http://vxut-app.test/api/tests\", data)\r\n                .then(response => {\r\n                    // commit(\"setTestData\", response.data);\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        questionDataClient: null,\r\n    },\r\n\r\n    getters: {\r\n        questionClient: state => state.questionDataClient\r\n    },\r\n\r\n    mutations: {\r\n        setQuestionDataClient(state, data) {\r\n            state.questionDataClient = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        storeQuestionRequestClient({ commit }, data) {\r\n            return axios\r\n                .post(\"http://vxut-app.test/api/tests\", data)\r\n                .then(response => {\r\n                    commit(\"setQuestionDataClient\", response.data);\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        testDataClient: null,\r\n    },\r\n\r\n    getters: {\r\n        testClient: state => state.testDataClient\r\n    },\r\n\r\n    mutations: {\r\n        setTestDataClient(state, data) {\r\n            state.testDataClient = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getTestDataClient({ commit }) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/tests\")\r\n                .then(response => {\r\n                    commit(\"setTestDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        getClientChapterData({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/test/\" + data.test_id + \"/\" + data.contest_id)\r\n                .then(response => {\r\n                    commit(\"setTestData\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        storeClientTestRequest({ commit }, data) {\r\n            return axios\r\n                .post(\"http://vxut-app.test/api/tests\", data)\r\n                .then(response => {\r\n                    // commit(\"setTestData\", response.data);\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        resultDataClient: null,\r\n    },\r\n\r\n    getters: {\r\n        resultClient: state => state.resultDataClient\r\n    },\r\n\r\n    mutations: {\r\n        setResultDataClient(state, data) {\r\n            state.resultDataClient = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getResultDataClient({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/result/\" + data)\r\n                .then(response => {\r\n                    commit(\"setResultDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        getResultHistoryDataClient({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/result-detail/\" + data.test_id)\r\n                .then(response => {\r\n                    commit(\"setResultDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        getResultSkillHistoryDataClient({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/test-skill-history/\" + data.test_skill_id + \"/\" + data.result_skill_id)\r\n                .then(response => {\r\n                    commit(\"setResultDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        getResultTest({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/admin/test-result/\" + data)\r\n                .then(response => {\r\n                    commit(\"setResultDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        getResultTestDetail({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/admin/test-result/\" + data.test_id + \"/\" + data.user_id)\r\n                .then(response => {\r\n                    commit(\"setResultDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        getResultTestSkill({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/admin/test-skill-result/\" + data)\r\n                .then(response => {\r\n                    commit(\"setResultDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        getResultTestSkillDetail({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/admin/test-skill-result/\" + data.test_skill_id + \"/\" + data.user_id + \"/\" + data.result_skill_id)\r\n                .then(response => {\r\n                    commit(\"setResultDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        usersData: null,\r\n    },\r\n\r\n    getters: {\r\n        users: state => state.usersData\r\n    },\r\n\r\n    mutations: {\r\n        setUsersData(state, data) {\r\n            state.usersData = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getUsersData({ commit }) {\r\n            return axios\r\n                .get(\"http://vxut-app.test/api/admin/users\")\r\n                .then(response => {\r\n                    commit(\"setUsersData\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        storeUsersData({ commit }, data) {\r\n            return axios\r\n                .patch(\"http://vxut-app.test/api/admin/users/\" + data.id, data)\r\n                .then(response => {\r\n\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        testSKillData: null,\r\n    },\r\n\r\n    getters: {\r\n        testSkill: state => state.testSKillData\r\n    },\r\n\r\n    mutations: {\r\n        setTestSkillData(state, data) {\r\n            state.testSKillData = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getTestSkillData({ commit }) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/admin/test-skill\")\r\n                .then(response => {\r\n                    commit(\"setTestSkillData\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        storeTestSkillRequest({ commit }, data) {\r\n            return axios\r\n                .post(\"http://vxut-app.test/api/admin/test-skill\", data)\r\n                .then(response => {\r\n                    // commit(\"setTestData\", response.data);\r\n                });\r\n        },\r\n        updateTestSkillRequest({ commit }, data) {\r\n            return axios\r\n                .put(\"http://vxut-app.test/api/admin/test-skill/\" + data.id, data)\r\n                .then(response => {\r\n                    // commit(\"setTestData\", response.data);\r\n                });\r\n        },\r\n        destroyTestSkillRequest({ commit }, data) {\r\n            return axios\r\n                .delete(\"http://vxut-app.test/api/admin/test-skill/\" + data)\r\n                .then(response => {\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        questionSkillData: null\r\n    },\r\n\r\n    getters: {\r\n        questionSkill: state => state.questionSkillData\r\n    },\r\n\r\n    mutations: {\r\n        setQuestionSKillData(state, data) {\r\n            state.questionSkillData = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getQuestionSkillData({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/admin/question-skill/\" + data)\r\n                .then(response => {\r\n                    commit(\"setQuestionSKillData\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        storeQuestionSkillRequest({ commit }, data, config) {\r\n            return axios\r\n                .post(\"http://vxut-app.test/api/admin/question-skill\", data, config)\r\n                .then(response => {\r\n                    // commit(\"setQuestionData\", response.data);\r\n                });\r\n        },\r\n        updateQuestionSkillRequest({ commit }, data, config) {\r\n            return axios\r\n                .post(`http://vxut-app.test/api/admin/question-skill/${data.get(\"id\")}/edit`, data, config)\r\n                .then(response => {\r\n                    // commit(\"setQuestionData\", response.data);\r\n                });\r\n        },\r\n        destroyQuestionSkillRequest({ commit }, data) {\r\n            return axios\r\n                .delete(\"http://vxut-app.test/api/admin/question-skill/\" + data)\r\n                .then(response => {\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        answerSkillData: null\r\n    },\r\n\r\n    getters: {\r\n        answerSkill: state => state.answerSkillData\r\n    },\r\n\r\n    mutations: {\r\n        setAnswerSkillData(state, data) {\r\n            state.answerSkillData = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getAnswerSkillData({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/admin/answer-skill/\" + data)\r\n                .then(response => {\r\n                    commit(\"setAnswerSkillData\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        storeAnswerSkillRequest({ commit }, data) {\r\n            return axios\r\n                .post(\"http://vxut-app.test/api/admin/answer-skill\", data)\r\n                .then(response => {\r\n                    // commit(\"setAnswerData\", response.data);\r\n                });\r\n        },\r\n        updateAnswerSkillRequest({ commit }, data) {\r\n            return axios\r\n                .patch(`http://vxut-app.test/api/admin/answer-skill/${data.id}`, data)\r\n                .then(response => {\r\n                    // commit(\"setAnswerData\", response.data);\r\n                });\r\n        },\r\n        destroyAnswerSkillRequest({ commit }, data) {\r\n            return axios\r\n                .delete(\"http://vxut-app.test/api/admin/answer-skill/\" + data)\r\n                .then(response => {\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        testSkillDataClient: null,\r\n        testDataClient: null,\r\n    },\r\n\r\n    getters: {\r\n        testSkillClient: state => state.testSkillDataClient,\r\n        testClient: state => state.testDataClient\r\n    },\r\n\r\n    mutations: {\r\n        setTestSkillDataClient(state, data) {\r\n            state.testSkillDataClient = data;\r\n        },\r\n        setTestDataClient(state, data) {\r\n            state.testDataClient = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getTestSkillDataClient({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/test-skill/\" + data.level_id + \"/\" + data.skill_id)\r\n                .then(response => {\r\n                    commit(\"setTestSkillDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        getTestSkillHistoryDataClient({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/test-skill-history\")\r\n                .then(response => {\r\n                    commit(\"setTestSkillDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        getTestHistoryDataClient({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/test-history\")\r\n                .then(response => {\r\n                    commit(\"setTestDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        questionSkillDataClient: null,\r\n    },\r\n\r\n    getters: {\r\n        questionSkillClient: state => state.questionSkillDataClient\r\n    },\r\n\r\n    mutations: {\r\n        setQuestionSkillDataClient(state, data) {\r\n            state.questionSkillDataClient = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        storeQuestionSkillRequestClient({ commit }, data) {\r\n            return axios\r\n                .post(\"http://vxut-app.test/api/test-skill\", data)\r\n                .then(response => {\r\n                    commit(\"setQuestionSkillDataClient\", response.data);\r\n                });\r\n        },\r\n        getQuestionSkillDataClient({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/test-skill/\" + data)\r\n                .then(response => {\r\n                    commit(\"setQuestionSkillDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        flashcardManagerDataClient: null,\r\n    },\r\n\r\n    getters: {\r\n        flashcardManagerClient: state => state.flashcardManagerDataClient\r\n    },\r\n\r\n    mutations: {\r\n        setFlashcardManagerDataClient(state, data) {\r\n            state.flashcardManagerDataClient = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getFlashcardManagerDataClient({ commit }) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/manager-my-flash-cards\")\r\n                .then(response => {\r\n                    commit(\"setFlashcardManagerDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        storeFlashcardManagerDataClientRequest({ commit }, data) {\r\n            return axios\r\n                .post(\"http://vxut-app.test/api/manager-my-flash-cards\", data)\r\n                .then(response => {\r\n                    // commit(\"setTestData\", response.data);\r\n                });\r\n        },\r\n        updateFlashcardManagerDataClientRequest({ commit }, data) {\r\n            return axios\r\n                .put(\"http://vxut-app.test/api/manager-my-flash-cards/\" + data.id, data)\r\n                .then(response => {\r\n                    // commit(\"setTestData\", response.data);\r\n                });\r\n        },\r\n        destroyFlashcardManagerDataClientRequest({ commit }, data) {\r\n            return axios\r\n                .delete(\"http://vxut-app.test/api/manager-my-flash-cards/\" + data)\r\n                .then(response => {\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        flashcardManagerDetailDataClient: null,\r\n    },\r\n\r\n    getters: {\r\n        flashcardManagerDetailClient: state => state.flashcardManagerDetailDataClient\r\n    },\r\n\r\n    mutations: {\r\n        setFlashcardManagerDetailDataClient(state, data) {\r\n            state.flashcardManagerDetailDataClient = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getFlashcardManagerDetailDataClient({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/manager-my-flash-card/\" + data)\r\n                .then(response => {\r\n                    commit(\"setFlashcardManagerDetailDataClient\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        storeFlashcardManagerDetailDataClientRequest({ commit }, data) {\r\n            return axios\r\n                .post(\"http://vxut-app.test/api/manager-my-flash-card\", data)\r\n                .then(response => {\r\n                    // commit(\"setTestData\", response.data);\r\n                });\r\n        },\r\n        updateFlashcardManagerDetailDataClientRequest({ commit }, data) {\r\n            return axios\r\n                .put(\"http://vxut-app.test/api/manager-my-flash-card/\" + data.id, data)\r\n                .then(response => {\r\n                    // commit(\"setTestData\", response.data);\r\n                });\r\n        },\r\n        destroyFlashcardManagerDetailDataClientRequest({ commit }, data) {\r\n            return axios\r\n                .delete(\"http://vxut-app.test/api/manager-my-flash-card/\" + data)\r\n                .then(response => {\r\n                });\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        myFlashcardData: null,\r\n    },\r\n\r\n    getters: {\r\n        myFlashcard: state => state.myFlashcardData\r\n    },\r\n\r\n    mutations: {\r\n        setMyFlashcardDataData(state, data) {\r\n            state.myFlashcardData = data;\r\n        }\r\n    },\r\n\r\n    actions: {\r\n        getFlashcardsData({ commit }) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/my-flash-cards\")\r\n                .then(response => {\r\n                    commit(\"setMyFlashcardDataData\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        getFlashcardData({ commit }, data) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/my-flash-card/\" + data)\r\n                .then(response => {\r\n                    commit(\"setMyFlashcardDataData\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        getAllFlashcardsData({ commit }) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/flash-cards\")\r\n                .then(response => {\r\n                    commit(\"setMyFlashcardDataData\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n        getAdminAllFlashcardsData({ commit }) {\r\n            axios\r\n                .get(\"http://vxut-app.test/api/admin/manager-flash-cards\")\r\n                .then(response => {\r\n                    commit(\"setMyFlashcardDataData\", response.data);\r\n                })\r\n                .catch(err => {\r\n                    commit(err);\r\n                });\r\n        },\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\n","import Vue from 'vue'\nimport Vuex from 'vuex'\nimport homepage from \"./modules/homepage\";\nimport dashboard from \"./modules/dashboard\"\nimport test from \"./modules/test\"\nimport auth from \"./modules/auth\"\nimport chapter from \"./modules/chapter\"\nimport question from \"./modules/question\"\nimport answer from \"./modules/answer\"\nimport clientContest from \"./modules/client-contest\"\nimport clientAnswer from \"./modules/client-answer\"\nimport clientChapter from \"./modules/client-chapter\"\nimport clientQuestion from \"./modules/client-question\"\nimport clientTest from \"./modules/client-test\"\nimport clientResult from \"./modules/client-result\"\nimport users from \"./modules/users\"\nimport testSkill from './modules/test-skill';\nimport questionSkill from './modules/question-skill';\nimport answerSkill from \"./modules/answer-skill\";\nimport clientTestSkill from './modules/client-test-skill';\nimport clientTestSkillQuestion from './modules/client-test-skill-question';\nimport clientFlashcardManager from './modules/client-flashcard-manager';\nimport clientFlashcardManagerDetail from './modules/client-flashcard-manager-detail';\nimport myFlashcard from './modules/my-flashcard';\n\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store({\n  modules: {\n    homepage,\n    dashboard,\n    test,\n    auth,\n    chapter,\n    question,\n    answer,\n    clientContest,\n    clientAnswer,\n    clientChapter,\n    clientQuestion,\n    clientTest,\n    clientResult,\n    users,\n    testSkill,\n    questionSkill,\n    answerSkill,\n    clientTestSkill,\n    clientTestSkillQuestion,\n    clientFlashcardManager,\n    clientFlashcardManagerDetail,\n    myFlashcard\n  }\n})\n\nexport default store;","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport { BootstrapVue } from 'bootstrap-vue'\r\nimport \"./assets/_global.scss\";\r\nimport router from \"./router/routes\";\r\nimport VueRouter from \"vue-router\";\r\nimport store from \"./store/index\";\r\nimport VueFormulate from '@braid/vue-formulate'\r\nimport vSelect from 'vue-select'\r\nimport ElementUI from 'element-ui';\r\nimport 'element-ui/lib/theme-chalk/index.css';\r\nimport axios from \"axios\";\r\nimport { BootstrapVueIcons } from 'bootstrap-vue';\r\nimport VueCountdownTimer from 'vuejs-countdown-timer';\r\nimport CKEditor from 'ckeditor4-vue';\r\n\r\nVue.use(CKEditor);\r\nVue.use(VueCountdownTimer);\r\n\r\nVue.use(BootstrapVueIcons)\r\nimport locale from 'element-ui/lib/locale/lang/en'\r\n\r\naxios.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response.status === 422) {\r\n      store.commit(\"setErrors\", error.response.data.errors);\r\n    } else if (error.response.status === 401) {\r\n      store.commit(\"auth/setUserData\", null);\r\n      localStorage.removeItem(\"authToken\");\r\n      router.push({ name: \"Login\" });\r\n    } else {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n);\r\n\r\naxios.interceptors.request.use(function (config) {\r\n  config.headers.common = {\r\n    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\"\r\n  };\r\n\r\n  return config;\r\n});\r\n\r\n\r\nVue.use(ElementUI, { locale });\r\n\r\n\r\nVue.component('v-select', vSelect)\r\nVue.use(VueFormulate)\r\nVue.use(VueRouter);\r\n\r\n\r\n// Make BootstrapVue available throughout your project\r\nVue.use(BootstrapVue)\r\n\r\n\r\n\r\nVue.config.productionTip = false\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n"],"sourceRoot":""}